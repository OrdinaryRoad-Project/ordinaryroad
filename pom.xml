<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2021 苗锦洲
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tech.ordinaryroad</groupId>
    <artifactId>ordinaryroad</artifactId>
    <version>1.3.2</version>
    <packaging>pom</packaging>

    <name>ordinaryroad</name>
    <url>https://ordinaryroad.top</url>
    <description>OrdinaryRoad</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <ordinaryroad.version>1.3.2</ordinaryroad.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <spring-boot.version>2.4.6</spring-boot.version>
        <spring-cloud.version>2020.0.3</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>

        <knife4j.version>3.0.3</knife4j.version>

        <mapper-spring-boot-starter.version>2.1.5</mapper-spring-boot-starter.version>

        <!--common-->
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <commons-lang.version>3.12.0</commons-lang.version>
        <commons-collections.version>4.4</commons-collections.version>
        <commons.io.version>2.11.0</commons.io.version>
        <hutool.version>5.7.15</hutool.version>

        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <mapstruct.version>1.4.1.Final</mapstruct.version>
        <lombok.version>1.18.24</lombok.version>
        <dynamic-datasource-spring-boot-starter.version>3.4.1</dynamic-datasource-spring-boot-starter.version>
        <pagehelper-starter.version>1.3.1</pagehelper-starter.version>
        <swagger-annotations.version>1.5.22</swagger-annotations.version>
        <sa-token.version>1.30.0</sa-token.version>
        <spring-cloud-starter-loadbalancer.version>3.0.4</spring-cloud-starter-loadbalancer.version>
        <fastjson2.version>2.0.4</fastjson2.version>
        <pagehelper.version>5.2.1</pagehelper.version>
        <minio.version>8.0.0</minio.version>
        <thumbnailator.version>0.4.16</thumbnailator.version>

        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <metadata-extractor.version>2.16.0</metadata-extractor.version>
        <jiguang-common.version>1.2.0</jiguang-common.version>
        <jpush-client.version>3.6.1</jpush-client.version>
        <jts.version>1.18.2</jts.version>
        <spatial4j.version>0.7</spatial4j.version>
    </properties>

    <modules>
        <module>ordinaryroad-upms</module>
        <module>ordinaryroad-commons</module>
        <module>ordinaryroad-auth-server</module>
        <module>ordinaryroad-gateway</module>
        <module>ordinaryroad-push</module>
    </modules>

    <!-- 以下依赖 全局所有的模块都会引入 -->
    <dependencies>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <!-- 依赖声明 -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot 依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud 微服势 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud Alibaba 微服势 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- knife4j 依赖配置 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-micro-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!-- swagger-annotations -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>

            <!-- dynamic-datasource-spring-boot-starter -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-datasource-spring-boot-starter.version}</version>
            </dependency>

            <!-- TK MyBatis -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${mapper-spring-boot-starter.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>mybatis</artifactId>
                        <groupId>org.mybatis</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>mybatis-spring</artifactId>
                        <groupId>org.mybatis</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- pagehelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <!-- pagehelper-spring-boot-starter -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-starter.version}</version>
            </dependency>


            <!-- ordinaryroad-commons-base -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-commons-base</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-commons-core -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-commons-core</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-commons-mybatis -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-commons-mybatis</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-commons-swagger -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-commons-swagger</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-commons-satoken -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-commons-satoken</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-commons-minio -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-commons-minio</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-commons-kafka -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-commons-kafka</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-auth-server-api -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-auth-server-api</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-upms-api -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-upms-api</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <!-- ordinaryroad-push-api -->
            <dependency>
                <groupId>tech.ordinaryroad</groupId>
                <artifactId>ordinaryroad-push-api</artifactId>
                <version>${ordinaryroad.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-core</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <!-- Sa-Token 权限认证, 在线文档：http://sa-token.dev33.cn/ -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot-starter</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <!-- Sa-Token 权限认证（Reactor响应式集成）, 在线文档：http://sa-token.dev33.cn/ -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-reactor-spring-boot-starter</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <!-- Sa-Token-OAuth2.0 模块 -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-oauth2</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <!-- Sa-Token整合Redis (使用jackson序列化方式) -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-dao-redis-jackson</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <!-- hutool -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- fastjson2 -->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>

            <!-- mapstruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- MinIO文件系统 -->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>

            <!-- 图片压缩 -->
            <dependency>
                <groupId>net.coobird</groupId>
                <artifactId>thumbnailator</artifactId>
                <version>${thumbnailator.version}</version>
            </dependency>

            <!-- 文件metadata -->
            <dependency>
                <groupId>com.drewnoakes</groupId>
                <artifactId>metadata-extractor</artifactId>
                <version>${metadata-extractor.version}</version>
            </dependency>

            <!-- 极光推送 -->
            <dependency>
                <groupId>cn.jpush.api</groupId>
                <artifactId>jiguang-common</artifactId>
                <version>${jiguang-common.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.jpush.api</groupId>
                <artifactId>jpush-client</artifactId>
                <version>${jpush-client.version}</version>
            </dependency>

            <!-- jts-core -->
            <dependency>
                <groupId>org.locationtech.jts</groupId>
                <artifactId>jts-core</artifactId>
                <version>${jts.version}</version>
            </dependency>
            <!-- spatial4j -->
            <dependency>
                <groupId>org.locationtech.spatial4j</groupId>
                <artifactId>spatial4j</artifactId>
                <version>${spatial4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
        <!-- 配置资源文件对应的位置，替换profiles -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <!-- 环境标识，需要与命名空间的名称相对应 -->
                <profiles.active>dev</profiles.active>
                <nacos.url>ordinaryroad-nacos:8848</nacos.url>
            </properties>
            <activation>
                <!-- 默认环境 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>pro</id>
            <properties>
                <profiles.active>pro</profiles.active>
                <nacos.url>nacos.or-pro:8848</nacos.url>
            </properties>
        </profile>
        <profile>
            <id>demo</id>
            <properties>
                <profiles.active>demo</profiles.active>
                <nacos.url>ordinaryroad-nacos:8848</nacos.url>
            </properties>
        </profile>
    </profiles>

    <!-- omitted xml -->
    <distributionManagement>
        <repository>
            <!--必须与 settings.xml 的 id 一致-->
            <id>ordinaryroad-ordinaryroad-maven-pro</id>
            <name>maven-pro</name>
            <url>https://ordinaryroad-maven.pkg.coding.net/repository/ordinaryroad/maven-pro/</url>
        </repository>
    </distributionManagement>
</project>
